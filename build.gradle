import java.text.SimpleDateFormat

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'

apply from: 'gradle-api-source.gradle'
apply from: 'publish-maven.gradle'

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

group = 'io.spring.gradle'
description = 'Dependency Management Plugin'

Date buildTimeAndDate = new Date()
ext {
    cglibVersion = '3.1'
    jarjarVersion = '1.2.1'
    mavenVersion = '3.0.4'
    spockVersion = GroovySystem.version.startsWith('1.') ? '0.7-groovy-1.8' : '0.7-groovy-2.0'
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    jarjar
    maven
}

task mavenRepackJar(type: Jar) { repackJar ->
    repackJar.baseName = "maven-repack"
    repackJar.version = mavenVersion

    doLast() {
        project.ant {
            taskdef name: "jarjar", classname: "com.tonicsystems.jarjar.JarJarTask", classpath: configurations.jarjar.asPath
            jarjar(destfile: repackJar.archivePath) {
                configurations.maven.each { originalJar ->
                    zipfileset(src: originalJar)
                }
                rule(pattern: 'org.**', result: 'io.spring.gradle.dependencymanagement.org.@1')
            }
        }
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile(files(mavenRepackJar))
    jarjar "org.gradle.jarjar:jarjar:$jarjarVersion"
    maven "org.apache.maven:maven-model-builder:$mavenVersion"
    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude group: 'org.codehaus.groovy'
    }
    testCompile "cglib:cglib-nodep:$cglibVersion"
}

tasks.findByPath('artifactoryPublish')?.configure {
    properties = [
            'gradle-plugin'  : "io.spring.dependency-management:${project.group}:${project.name}",
            'bintray.package': "${project.group}:dependency-management",
            'bintray.version': "${project.version}"
    ]
}

jar {
    dependsOn mavenRepackJar
    from(zipTree(mavenRepackJar.archivePath)) {
        include 'io/spring/gradle/**'
        include 'META-INF/plexus/**'
    }

    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
            'Build-Date': buildDate,
            'Build-Time': buildTime,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Specification-Vendor': 'spring.io'
        )
    }
}

groovydoc {
    docTitle = "$project.description $project.version API"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = "javadoc"
    from groovydoc
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = project.hasProperty('gradleVersion') ? project.getProperty('gradleVersion') :'1.12'
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}